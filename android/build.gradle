android {
    buildToolsVersion "23.0.2"
    compileSdkVersion 23
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        instrumentTest.setRoot('tests')
    }
    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v4'
    }
    defaultConfig {
        applicationId "com.dualdigital.cupidshooter"
        minSdkVersion 8
        targetSdkVersion 23
        multiDexEnabled true
    }
    buildTypes {
        release {
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    def fileName = "DD_love-shots.apk";
                    output.outputFile = new File(file.parent, fileName);
                }
            }
        }
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.facebook.android:facebook-android-sdk:4.6.0'
    compile 'com.google.android.gms:play-services-ads:8.3.0'
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/applovin-6.1.5.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/appodeal-1.14.2.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/chartboost-6.2.0.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/flurry-analytics-6.2.0.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/inmobi-5.2.0.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/my-target-4.2.0.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/unity-ads-1.4.7.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/yandex-metrica-2.30.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/android-support-v7-recyclerview-22.2.1.jar')
    compile files('C:/Users/tunde_000/Documents/Android Proj/Cupid Shooter/Appodeal_Android_1.14.2/android-support-v4-22.2.1.jar')
}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    file("libs/armeabi/").mkdirs();
    file("libs/armeabi-v7a/").mkdirs();
    file("libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if (jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

task run(type: Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.dualdigital.cupidshooter/com.dualdigital.cupidshooter.AndroidLauncher'
}

// sets up the Android Eclipse project, using the old Ant based build.
eclipse {
    // need to specify Java source sets explicitely, SpringSource Gradle Eclipse plugin
    // ignores any nodes added in classpath.file.withXml
    sourceSets {
        main {
            java.srcDirs "src", 'gen'
        }
    }

    jdt {
        sourceCompatibility = 1.6
        targetCompatibility = 1.6
    }

    classpath {
        plusConfigurations += [project.configurations.compile]        
        containers 'com.android.ide.eclipse.adt.ANDROID_FRAMEWORK', 'com.android.ide.eclipse.adt.LIBRARIES'       
    }

    project {
        name = appName + "-android"
        natures 'com.android.ide.eclipse.adt.AndroidNature'
        buildCommands.clear();
        buildCommand "com.android.ide.eclipse.adt.ResourceManagerBuilder"
        buildCommand "com.android.ide.eclipse.adt.PreCompilerBuilder"
        buildCommand "org.eclipse.jdt.core.javabuilder"
        buildCommand "com.android.ide.eclipse.adt.ApkBuilder"
    }
}

// sets up the Android Idea project, using the old Ant based build.
idea {
    module {
        sourceDirs += file("src");scopes = [ COMPILE: [plus: [project.configurations.compile]]]        

        iml {
            withXml {
                def node = it.asNode()
                def builder = NodeBuilder.newInstance();
                builder.current = node;
                builder.component(name: "FacetManager") {
                    facet(type: "android", name: "Android") {
                        configuration {
                            option(name: "UPDATE_PROPERTY_FILES" , value:"true")
                        }
                    }
                }
            }
        }
    }
}
